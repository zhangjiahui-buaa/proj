--java.lang.AssertionError: the size of the result sets mismatch (1 and 0)!
---- SELECT v0.c2 FROM v0;
---- cardinality: 1
---- SELECT v0.c2 FROM v0 WHERE ((- (json_quote(v0.c1)))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((NOT ((- (json_quote(v0.c1)))))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((((- (json_quote(v0.c1)))) ISNULL));
---- cardinality: 0
--	at sqlancer.ComparatorHelper.assumeResultSetsAreEqual(ComparatorHelper.java:97)
--	at sqlancer.sqlite3.oracle.tlp.SQLite3TLPWhereOracle.check(SQLite3TLPWhereOracle.java:41)
--	at sqlancer.common.oracle.CompositeTestOracle.check(CompositeTestOracle.java:22)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:61)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:364)
--	at sqlancer.Main$2.run(Main.java:559)
--	at sqlancer.Main$2.runThread(Main.java:541)
--	at sqlancer.Main$2.run(Main.java:532)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
--	at java.base/java.lang.Thread.run(Thread.java:1623)
---- Time: 2023/05/27 21:37:22
-- Database: database4
-- Database version: 3.40.0
-- seed value: 1685214884965
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
PRAGMA encoding = 'UTF-16le';
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2);
UPDATE OR IGNORE rt0 SET (c0)=(0.5017432917495102);
INSERT OR ABORT INTO rt0(c0, c1, c2) VALUES ('s(h\n0M', '0.5017432917495102', NULL);
ROLLBACK TRANSACTION;
UPDATE OR FAIL rt0 SET (c2, c1)=(0.5017432917495102, x'831e808d');
INSERT OR IGNORE INTO rt0(c1) VALUES ('2142542719');
UPDATE OR IGNORE rt0 SET c1=0.5676500231434629 WHERE '';
UPDATE OR IGNORE rt0 SET c1=x'09e9';
ANALYZE;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES ('890958018', x'0f18', '-1010822026');
ROLLBACK TRANSACTION;
REINDEX RTRIM;
UPDATE OR IGNORE rt0 SET (c0, c2)=(0.22492203395141774, NULL);
VACUUM main;
END TRANSACTION;
UPDATE OR IGNORE rt0 SET (c2)=(0.9587288467423841) WHERE rt0.c2 COLLATE NOCASE;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', x'');
UPDATE OR FAIL rt0 SET c2=-1010822026;
UPDATE OR IGNORE rt0 SET (c0, c1, c2)=(0xffffffffe24795df, 1227492392, '');
PRAGMA legacy_file_format = false;
UPDATE OR IGNORE rt0 SET (c2)=('-866396600') WHERE CAST(((rt0.c2)-(0.5017432917495102)) AS REAL);
BEGIN DEFERRED TRANSACTION;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'', NULL);
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES ('', x'', '-1648750105');
ROLLBACK TRANSACTION;
UPDATE OR IGNORE rt0 SET c0=NULL;
INSERT OR FAIL INTO rt0(c2) VALUES (0.8388865091106649);
UPDATE rt0 SET (c2)=(x'') WHERE ((rt0.c0)>>(rt0.c1)) COLLATE BINARY;
UPDATE OR IGNORE rt0 SET c0='0.5676500231434629';
PRAGMA recursive_triggers = false;
BEGIN EXCLUSIVE TRANSACTION;
COMMIT TRANSACTION;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'', NULL, '');
UPDATE OR REPLACE rt0 SET c1=-1.010822026E9 WHERE (((~ (rt0.c2)))+(rt0.c1));
PRAGMA main.checkpoint_fullfsync = true;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, NULL);
INSERT OR ROLLBACK INTO rt0 VALUES (0.30889231088016555, '-1301124951', NULL);
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES ('-2019836000', x'3548', x'');
INSERT OR REPLACE INTO rt0(c1) VALUES (NULL), ('GVPhl뾠l'), (NULL);
INSERT OR IGNORE INTO rt0 VALUES ('3+~', '-866396600', x'e13d');
UPDATE rt0 SET c2='/' WHERE CAST(rt0.c2 AS NUMERIC);
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (0.22492203395141774, NULL, 1085534910);
ROLLBACK TRANSACTION;
PRAGMA threads;
PRAGMA temp.optimize;
UPDATE OR REPLACE rt0 SET (c2)=(0.9357603169227489) WHERE (- (((rt0.c0)/(rt0.c2))));
INSERT OR ROLLBACK INTO rt0(c0) VALUES ('384829275');
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT ALL '', json_patch(rt0.c0, rt0.c1) COLLATE RTRIM COLLATE RTRIM, COUNT(*) FROM rt0;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (NULL, 0.8368788020730353, NULL);
UPDATE OR REPLACE rt0 SET (c2, c2)=('760152159', '-383506941') WHERE CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'' END COLLATE NOCASE COLLATE BINARY;
PRAGMA main.short_column_names = false;
VACUUM;
UPDATE OR IGNORE rt0 SET (c0)=('-1740437932') WHERE ((rt0.c2) BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt0.c0 COLLATE BINARY));
ROLLBACK TRANSACTION;
SELECT rtreecheck('rt0');
INSERT OR FAIL INTO rt0(c2, c1) VALUES (x'', '506086209');
INSERT OR ABORT INTO rt0(c1) VALUES ('-6ꗴS_oc');
UPDATE rt0 SET (c1)=(-1.740437932E9) WHERE 0x77d13acd;
END TRANSACTION;
ROLLBACK TRANSACTION;
--SELECT v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE ((- (json_quote(v0.c1)))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((NOT ((- (json_quote(v0.c1)))))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((((- (json_quote(v0.c1)))) ISNULL))

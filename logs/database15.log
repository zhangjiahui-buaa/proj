--java.lang.AssertionError: SELECT t0.c1 FROM t0 GROUP BY t0.c1;
--SELECT ALL t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1 HAVING t0.c2 UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (t0.c2)) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((t0.c2) ISNULL);
--	at sqlancer.sqlite3.oracle.tlp.SQLite3TLPHavingOracle.check(SQLite3TLPHavingOracle.java:85)
--	at sqlancer.common.oracle.CompositeTestOracle.check(CompositeTestOracle.java:22)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:61)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:364)
--	at sqlancer.Main$2.run(Main.java:559)
--	at sqlancer.Main$2.runThread(Main.java:541)
--	at sqlancer.Main$2.run(Main.java:532)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
--	at java.base/java.lang.Thread.run(Thread.java:1623)
---- Time: 2023/05/27 23:16:13
-- Database: database15
-- Database version: 3.40.0
-- seed value: 1685214884977
PRAGMA case_sensitive_like=ON;
PRAGMA encoding = 'UTF-8';
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB , c1 BLOB , c2 INTEGER , c3 BLOB , c4 TEXT  CHECK ( (((('')AND(((((c3)AND(c1)))OR(c1)))))OR(((c3) IS FALSE)))));
REINDEX  t0;
CREATE UNIQUE INDEX i95 ON t0(CASE (((c3, c0, c0))==((c0, c4, c1)))  WHEN COALESCE(DISTINCT '{(z', c2) THEN c0 END COLLATE NOCASE,(((~ (c0))) BETWEEN (((c3)&(c3))) AND (((c0)>(c0)))),((c3)<(c0)) COLLATE RTRIM DESC,CASE ((c0)IS NOT(c2))  WHEN (((c0)) BETWEEN ((c1)) AND ((c2))) THEN ((c3)*(c0)) WHEN CASE '-1010905090'  WHEN c2 THEN c3 ELSE c1 END THEN ((0.3516142451136808)<<(c3)) WHEN LTRIM(c4) THEN c0 ELSE c4 COLLATE NOCASE END COLLATE RTRIM DESC,'1Z\S2*Js' ASC) WHERE (~ ((NOT (c0))));
CREATE UNIQUE INDEX i56 ON t0(((SUBSTR(c3, c4)) BETWEEN ((- (c3))) AND ('1978447074' COLLATE BINARY)) COLLATE BINARY ASC,CAST((~ (c0)) AS BLOB),((CAST('1159211237' AS NUMERIC)) IS TRUE),'0.3516142451136808' COLLATE NOCASE,CASE c4  WHEN ((c4) NOTNULL) THEN ((c3)OR(NULL)) END DESC);
CREATE UNIQUE INDEX i86 ON t0(((((((((((('-1010905090'))<=((c4))))OR((c3 IN (c4)))))AND((((c1, c2, c2))>((0X75ecb4e2, c4, c1))))))AND(CAST(c0 AS REAL))))OR('0.3516142451136808')) COLLATE RTRIM,((((c0)&(c3)))>=(c0)) COLLATE BINARY ASC,(('') NOT NULL),((((CAST(c2 AS INTEGER))OR(CAST(c4 AS INTEGER))))OR(CASE WHEN c1 THEN -1.01090509E9 ELSE c4 END)),(((((c0) NOT BETWEEN (NULL) AND (c3))))>((1.159211237E9 COLLATE BINARY))) COLLATE BINARY) WHERE ((c1 COLLATE NOCASE) IS TRUE);
PRAGMA temp.shrink_memory;
BEGIN EXCLUSIVE TRANSACTION;
UPDATE OR IGNORE t0 SET (c3)=('2144480719') WHERE ((((t0.c0) BETWEEN (t0.c3) AND ('')))<<(((t0.c2)&(0.04445782563402645))));
CREATE INDEX i38 ON t0(CASE WHEN (~ (c3)) THEN (((c3)) BETWEEN ((NULL)) AND ((c4))) ELSE (NOT (c3)) END DESC,LENGTH(c4),CAST(((((c0)OR(c3)))AND(c4)) AS BLOB) COLLATE NOCASE,CASE (- (c2))  WHEN ((c2) NOT BETWEEN (c3) AND (c4)) THEN x'e66a' WHEN CAST(c2 AS BLOB) THEN (+ (c2)) WHEN (c4 IN ()) THEN CASE WHEN c0 THEN c1 WHEN c0 THEN c1 WHEN c0 THEN x'' END END COLLATE RTRIM,0.41301055145344123 DESC) WHERE CAST((NULL IN ()) AS BLOB);
UPDATE OR IGNORE t0 SET c1=NULL;
BEGIN  TRANSACTION;
UPDATE OR IGNORE t0 SET c0=-1.01090509E9 WHERE LTRIM(TRIM(0.9538457058315924, t0.c4));
PRAGMA ignore_check_constraints = false;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (NULL, 0Xffffffffc3df6bbc), (0Xffffffffc3becffe, -1008768068), (0.6696564630717889, '478005854');
PRAGMA main.mmap_size;
ANALYZE temp;
UPDATE OR IGNORE t0 SET c3=NULL WHERE 0.911933562987907;
BEGIN  TRANSACTION;
PRAGMA default_cache_size;
UPDATE OR IGNORE t0 SET (c2)=(NULL);
PRAGMA main.ignore_check_constraints;
ANALYZE sqlite_master;
PRAGMA mmap_size = 1920711973972078361;
INSERT OR ABORT INTO t0(c0) VALUES (x'a603'), (x''), (x'');
INSERT OR IGNORE INTO t0(c1, c2, c4) VALUES ('1159211237', '#d^<iD', 'CB釵zu');
UPDATE OR ABORT t0 SET (c2)=(2.144480719E9) WHERE ((CAST(x'' AS NUMERIC))>((t0.c2 IN (t0.c3))));
PRAGMA main.cache_spill = 1056488307772261405;
INSERT OR IGNORE INTO t0(c0, c3) VALUES (NULL, x'');
PRAGMA main.foreign_keys = false;
END TRANSACTION;
UPDATE OR IGNORE t0 SET (c3)=(NULL);
ANALYZE sqlite_master;
UPDATE OR REPLACE t0 SET (c3)=(0.7627649984367704) WHERE NULL;
ANALYZE;
PRAGMA application_id;
INSERT OR ABORT INTO t0(c0) VALUES ('-1952980259'), (x''), (x'');
INSERT OR IGNORE INTO t0(c1, c4) VALUES ('y쇲}N쿾{''s', NULL), ('1665006745', 0.1475465235383543), (-4.29145614E8, CAST(HEX(DISTINCT x'') AS REAL));
BEGIN  TRANSACTION;
REINDEX;
UPDATE OR IGNORE t0 SET (c1)=('574474425');
PRAGMA main.stats;
INSERT OR IGNORE INTO t0(c4, c2) VALUES (x'', 0.726739938997137), (NULL, x'089c'), ('ebrAF\n>*', NULL), (-1.008768068E9, '1978447074'), ('n৓', NULL);
REINDEX;
PRAGMA main.default_cache_size;
INSERT OR ABORT INTO t0(c1, c2) VALUES (0.6420460987913623, NULL);
INSERT OR IGNORE INTO t0(c1, c4, c3) VALUES (x'', NULL, 0.41301055145344123);
CREATE TEMPORARY VIEW v0(c0) AS SELECT 0Xffffffff889cd2bc FROM t0 WHERE (((((x'0c14')LIKE('574474425'))) ISNULL));
UPDATE OR IGNORE t0 SET c0=0.20661901468321053, c2='ta', c4=0X1bf63a4c WHERE t0.c0;
BEGIN IMMEDIATE TRANSACTION;
UPDATE OR IGNORE t0 SET c4=x'';
INSERT OR IGNORE INTO t0(c0, c3) VALUES ('-2100193509', NULL);
REINDEX NOCASE;
CREATE INDEX i27 ON t0(CAST(CASE c1  WHEN c4 THEN c1 END AS INTEGER) COLLATE BINARY,CASE '1319979848'  WHEN json_remove(c1, c3) THEN c2 WHEN ABS(c4) THEN ((c3) NOT BETWEEN (c2) AND (c4)) WHEN ((c4)<>(c1)) THEN ((c0)<<(c4)) WHEN CASE WHEN c2 THEN c0 END THEN UNLIKELY(c2) WHEN (c4 IN ()) THEN ((((((((x'')AND(c4)))AND(c0)))OR(NULL)))OR(c4)) END COLLATE RTRIM ASC,'vVw_0˱䭈',c0 COLLATE RTRIM DESC,(((((((c1, c2, c3))<>((c1, c2, c4))))OR(((c2) ISNULL))))OR((((c0)) NOT BETWEEN ((c3)) AND ((c2))))) COLLATE BINARY DESC);
CREATE UNIQUE INDEX IF NOT EXISTS i27 ON t0(((((c1)OR('1Z\S2*Js'))) BETWEEN (((c2)<(c2))) AND (((0xffffffffe27edc50) ISNULL))),((((((c2)AND(c0)))AND(c1)))LIKE(c2 COLLATE RTRIM)),(NOT ((((c4))<((c2))))) COLLATE RTRIM ASC,NULL COLLATE NOCASE,CAST(c0 AS BLOB) COLLATE RTRIM DESC) WHERE ((((c3)LIKE(NULL)))IS(CASE WHEN c2 THEN '59%' WHEN c0 THEN 0.15601688059106533 WHEN '2144480719' THEN c0 ELSE c0 END));
CREATE INDEX IF NOT EXISTS i14 ON t0('',(((((c3)OR(c0)))OR(NULL)) IN ()) COLLATE RTRIM,c1 COLLATE BINARY DESC,((((c3 IN ())))<((((c4) IS FALSE)))) DESC,(((c3)) BETWEEN (((~ (c2)))) AND ((((c4) NOT NULL)))) DESC) WHERE CASE ((c1)>(c2))  WHEN ((0.46185378732727655)>(c4)) THEN (c2 IN ()) ELSE c2 COLLATE RTRIM END;
CREATE INDEX IF NOT EXISTS i65 ON t0((((((c1)AND(c3)))OR(c1)) IN (((c0) BETWEEN (c1) AND (c1)), ((c3) NOT NULL))),1.665006745E9 ASC,(((CAST(c1 AS TEXT)))=(((c0 IN ())))) ASC,(((- (c1)))<=(json_type(c4))) COLLATE BINARY DESC,(((((c3 IN ()))AND(DATE(c1, c0, c0))))AND(((c4)IS NOT(c3)))) ASC);
CREATE INDEX IF NOT EXISTS i93 ON t0(((c4)LIKE(c4)) COLLATE NOCASE,((((((c0)AND(c1)))OR(c1))) IS TRUE) DESC,((((c2)IS NOT(c3)))>((c0 IN ()))) COLLATE RTRIM,((c2) NOT NULL) COLLATE BINARY,((((- (c2))))<=((0.9632820870030763))) COLLATE NOCASE) WHERE ((((~ (c4))))<=((((c2) IS FALSE))));
CREATE INDEX i66 ON t0(((c1 IN ()) IN ()) COLLATE RTRIM ASC,c1 DESC,((((((c1)OR(c1)))OR(c4))) NOTNULL) COLLATE RTRIM,LOWER(DISTINCT CASE c2  WHEN c1 THEN c2 ELSE c4 END) COLLATE NOCASE,((((((c0) NOT BETWEEN (c3) AND (c4)))AND(c0)))AND(c3)) ASC);
BEGIN  TRANSACTION;
UPDATE t0 SET c4='' WHERE ((((t0.c3) ISNULL))OR(0.7528711718698305));
REINDEX  t0;
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO t0 VALUES ('512978466', 0Xffffffff9853086d, 0.8840744085392512, x'2334d5cb', x'b6cc'), (x'7b0c', 575513219, 0.46185378732727655, NULL, 'pXU~㞆q9<'), (' V8㱌', x'74ad', '1665006745', '1159211237', 0X2cf7c083), ('-1952980259', NULL, 0Xffffffffacee4dfc, x'', '[%'), (x'', '521796605', 1.655571185E9, '1', '1970715806');
UPDATE OR FAIL t0 SET c4=x'';
END TRANSACTION;
REINDEX;
ANALYZE temp;
UPDATE OR IGNORE t0 SET (c2, c1, c1)=(0.7835398220990192, '-943140217', '96798021') WHERE (t0.c1 COLLATE NOCASE IN ());
UPDATE t0 SET (c4, c4)=(-2.100193509E9, '0.7528711718698305');
REINDEX  t0;
COMMIT TRANSACTION;
REINDEX i86;
INSERT OR FAIL INTO t0 VALUES (x'', 0.9798253847451033, NULL, NULL, 0xfffffffff5891fe4);
INSERT OR REPLACE INTO t0(c4, c3, c0, c2, c1) VALUES (x'', NULL, '-1008768068', 0.09428531254488093, '-2100193509'), ('0.6420460987913623', '05', '', NULL, '-701461906'), (x'20dc', 0.14159355857288713, x'dcab', 0Xfffffffffb290893, '0.6420460987913623');
INSERT OR REPLACE INTO t0(c2, c4, c1) VALUES (x'', '-6408314', NULL);
INSERT OR IGNORE INTO t0(c0, c1, c3) VALUES ('0.1475465235383543', '', 0.13399879995503616), ('n৓', x'', '-175562780'), (NULL, '', x'');
INSERT OR IGNORE INTO t0(c3, c1) VALUES ('-1010905090', '2vE7');
UPDATE OR IGNORE t0 SET c3=0.8840744085392512;
INSERT OR IGNORE INTO t0(c1, c0, c2) VALUES ('0.7627649984367704', -1.7556278E8, x''), (0.25558582797396456, x'', 476693549), ('-415029501', NULL, -1763776454);
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (-2.89804457E8), ('~Oz1whbIb'), (x''), ('512978466');
ROLLBACK TRANSACTION;
INSERT OR IGNORE INTO t0(c4) VALUES ('ᾱu魘-') ON CONFLICT DO NOTHING;
BEGIN IMMEDIATE TRANSACTION;
UPDATE t0 SET c2=NULL, c2='Qp%Ra&l' WHERE (((t0.c0, t0.c3, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, (~ (t0.c4)), (((t0.c2))<((t0.c2))))) AND (((((t0.c0)) NOT BETWEEN ((t0.c4)) AND ((t0.c1))), CAST(t0.c0 AS NUMERIC), ((('-2100193509'))>=((0.6384724491811847))))));
UPDATE OR IGNORE t0 SET c1=x'', c4=0X2279c2b0 WHERE ((CAST(t0.c3 AS INTEGER))%(UNLIKELY(t0.c4)));
ROLLBACK TRANSACTION;
BEGIN  TRANSACTION;
PRAGMA locking_mode = NORMAL;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE (- (LIKELY(' 䭈')));
PRAGMA temp.recursive_triggers;
INSERT OR IGNORE INTO t0(c3, c1, c0, c4) VALUES (0.9441492951468173, 'ML', '1655571185', '');
CREATE UNIQUE INDEX IF NOT EXISTS i58 ON t0((((((c1) BETWEEN (c2) AND (c4))))>=((c4))) COLLATE BINARY,LIKE(x'd092a206', ((c4)<<(c3))) COLLATE RTRIM ASC,(~ ((c4 IN (c4)))) COLLATE NOCASE,(+ (CAST(c2 AS REAL))) COLLATE RTRIM ASC,((((c0) BETWEEN (c0) AND (c0)))>=((~ ('')))));
CREATE UNIQUE INDEX IF NOT EXISTS i89 ON t0((((c3)/(c0)) IN ()) COLLATE RTRIM,c1 ASC,c2 COLLATE NOCASE DESC,c3 COLLATE NOCASE ASC,(((c1 IN ())) BETWEEN (CAST(c0 AS REAL)) AND (CAST(c3 AS TEXT))) ASC);
COMMIT TRANSACTION;
ROLLBACK TRANSACTION;

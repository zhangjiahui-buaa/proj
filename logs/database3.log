--java.lang.AssertionError: the size of the result sets mismatch (2 and 0)!
---- SELECT DISTINCT * FROM t0, v0;
---- cardinality: 2
---- SELECT DISTINCT * FROM t0, v0 WHERE ((((CAST(v0.c2 AS TEXT)))<=(((v0.c0 IN ()))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((CAST(v0.c2 AS TEXT)))<=(((v0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((CAST(v0.c2 AS TEXT)))<=(((v0.c0 IN ()))))) ISNULL));
---- cardinality: 0
--	at sqlancer.ComparatorHelper.assumeResultSetsAreEqual(ComparatorHelper.java:97)
--	at sqlancer.sqlite3.oracle.tlp.SQLite3TLPDistinctOracle.check(SQLite3TLPDistinctOracle.java:38)
--	at sqlancer.common.oracle.CompositeTestOracle.check(CompositeTestOracle.java:22)
--	at sqlancer.ProviderAdapter.generateAndTestDatabase(ProviderAdapter.java:61)
--	at sqlancer.Main$DBMSExecutor.run(Main.java:364)
--	at sqlancer.Main$2.run(Main.java:559)
--	at sqlancer.Main$2.runThread(Main.java:541)
--	at sqlancer.Main$2.run(Main.java:532)
--	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
--	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
--	at java.base/java.lang.Thread.run(Thread.java:1623)
---- Time: 2023/05/27 23:12:46
-- Database: database3
-- Database version: 3.40.0
-- seed value: 1685214884964
PRAGMA cache_size = 50000;
PRAGMA temp_store=MEMORY;
PRAGMA synchronous=off;
PRAGMA case_sensitive_like=ON;
PRAGMA encoding = 'UTF-16';
CREATE TABLE t0 (c0 BLOB );
UPDATE OR ROLLBACK t0 SET c0=0.8136592437683267;
INSERT OR FAIL INTO t0(c0) VALUES (NULL);
UPDATE t0 SET c0=x'';
ROLLBACK TRANSACTION;
UPDATE OR IGNORE t0 SET c0='-1229764431', c0=0.5976133904956064, c0=x'' WHERE ((((t0.c0)AND(t0.c0)))>>(0.5976133904956064));
BEGIN EXCLUSIVE TRANSACTION;
ANALYZE;
INSERT OR IGNORE INTO t0 VALUES ('ꅇCfE<孾k~');
REINDEX RTRIM;
UPDATE t0 SET c0=x'', c0=NULL WHERE ((((((((((((NULL COLLATE NOCASE)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((NULL) NOT NULL))))OR((~ (t0.c0)))))AND(((t0.c0)>(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0));
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT CASE WHEN '796198636' THEN (NOT (t0.c0)) WHEN ((((734165217)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)/(t0.c0)) WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN ()) END, (+ (((t0.c0)|(t0.c0)))), CAST(TOTAL(t0.c0) AS NUMERIC) FROM t0 WHERE ((((~ (x'')))*(SQLITE_COMPILEOPTION_GET(0.8136592437683267))));
BEGIN  TRANSACTION;
UPDATE OR IGNORE t0 SET (c0)=(65756785);
INSERT OR ROLLBACK INTO t0 VALUES ('734165217');
END TRANSACTION;
INSERT OR IGNORE INTO t0 VALUES (''), (0.7475541509563243), ('');
COMMIT TRANSACTION;
ANALYZE main;
UPDATE OR IGNORE t0 SET (c0)=(0.5976133904956064);
REINDEX NOCASE;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL);
INSERT OR IGNORE INTO t0(c0) VALUES (CAST(CAST('sT' AS REAL) AS NUMERIC));
CREATE UNIQUE INDEX IF NOT EXISTS i65 ON t0(CAST(((((c0)AND(c0)))OR(c0)) AS REAL) COLLATE NOCASE ASC) WHERE ((c0) NOT NULL);
CREATE INDEX IF NOT EXISTS i30 ON t0(CASE c0  WHEN (((c0))=((c0))) THEN (~ (c0)) WHEN (((c0, c0, c0, c0, c0, '', c0)) NOT BETWEEN ((0.5976133904956064, c0, c0, c0, c0, c0, c0)) AND ((c0, c0, c0, c0, c0, NULL, c0))) THEN c0 COLLATE NOCASE WHEN (c0 IN ()) THEN (NOT (c0)) WHEN ((c0) NOTNULL) THEN c0 WHEN (+ (0.6639414142525476)) THEN CAST(c0 AS TEXT) END COLLATE NOCASE ASC) WHERE CAST(c0 COLLATE RTRIM AS REAL);
INSERT OR REPLACE INTO t0 VALUES (0.9616487313559952), ('671797389'), (NULL);
REINDEX;
BEGIN EXCLUSIVE TRANSACTION;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (((((((((t0.c0 IN (t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)&(t0.c0)))))OR(((t0.c0) NOT BETWEEN ('QA	7') AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END));
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
BEGIN IMMEDIATE TRANSACTION;
COMMIT TRANSACTION;
INSERT OR IGNORE INTO t0(c0) VALUES (x'');
INSERT OR FAIL INTO t0 VALUES (0.9616487313559952);
ROLLBACK TRANSACTION;
INSERT OR REPLACE INTO t0(c0) VALUES (''), (x''), ('-1671406722');
UPDATE OR ABORT t0 SET (c0, c0, c0)=(-1076213635, 0.4581269205597538, NULL);
INSERT OR IGNORE INTO t0(c0) VALUES (x'');
UPDATE OR IGNORE t0 SET (c0)=(x'');
INSERT OR IGNORE INTO t0 VALUES ('TR');
UPDATE OR IGNORE t0 SET c0='', c0=x'' WHERE ((json_type(t0.c0))>>(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))));
UPDATE t0 SET c0=x'', c0='';
UPDATE OR ABORT t0 SET c0=x'';
INSERT OR IGNORE INTO t0 VALUES ('-1671406722');
INSERT OR REPLACE INTO t0 VALUES (x'');
UPDATE OR IGNORE t0 SET c0=x'', c0=350792862 WHERE '-2081853579';
UPDATE OR IGNORE t0 SET (c0)=('东') WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND ((t0.c0 IN ())));
UPDATE OR IGNORE t0 SET c0='-1229764431';
UPDATE t0 SET (c0, c0)=(7.96198636E8, '|oi6䡽') WHERE CAST((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS BLOB);
COMMIT;
PRAGMA main.shrink_memory;
INSERT OR FAIL INTO t0 VALUES (NULL);
PRAGMA temp.foreign_keys;
UPDATE OR ABORT t0 SET c0=0Xffffffffaf8f8efe WHERE ((CASE WHEN t0.c0 THEN t0.c0 END) IS FALSE);
BEGIN DEFERRED TRANSACTION;
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
ROLLBACK TRANSACTION;
REINDEX i30;
INSERT OR IGNORE INTO t0(c0) VALUES ('887183024');
INSERT OR IGNORE INTO t0 VALUES (NULL), (0.5743828177896801), (0.07658211730397135);
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL);
CREATE UNIQUE INDEX i47 ON t0(c0 ASC);
CREATE UNIQUE INDEX IF NOT EXISTS i39 ON t0((((c0)) NOT BETWEEN ((HEX(c0))) AND (((c0 IN (c0))))) COLLATE NOCASE) WHERE ((NULL) NOT BETWEEN ((((c0))<((c0)))) AND ((c0 IN (c0))));
UPDATE OR IGNORE t0 SET (c0)=(0.6639414142525476) WHERE ((t0.c0 IN ()) IN ());
COMMIT TRANSACTION;
CREATE UNIQUE INDEX i44 ON t0(c0 ASC);
CREATE INDEX i62 ON t0(CAST(c0 AS TEXT) COLLATE NOCASE ASC);
UPDATE t0 SET (c0)=('350792862') WHERE (((t0.c0 IN ()))IS NOT(t0.c0));
INSERT OR IGNORE INTO t0(c0) VALUES (3.50792862E8);
UPDATE t0 SET (c0, c0)=('', '') WHERE ((((t0.c0)IS NOT(t0.c0)))*(t0.c0 COLLATE RTRIM));
UPDATE OR IGNORE t0 SET (c0)=(0.5845117622294709) WHERE TRIM(DISTINCT t0.c0);
REINDEX  t0;
CREATE UNIQUE INDEX IF NOT EXISTS i5 ON t0((((c0, c0, c0)) NOT BETWEEN ((CAST(c0 AS TEXT), ((c0)IS NOT(c0)), (((c0)) BETWEEN ((c0)) AND ((c0))))) AND (((((c0, c0, c0)) NOT BETWEEN ((c0, c0, c0)) AND ((c0, c0, c0))), (((c0)) NOT BETWEEN ((c0)) AND ((c0))), (c0 IN ())))) ASC);
CREATE INDEX i48 ON t0(CAST((~ (c0)) AS BLOB) ASC) WHERE (((c0 IN ()))>=(((c0) NOT BETWEEN (c0) AND (NULL))));
UPDATE t0 SET (c0)=(NULL);
REINDEX  t0;
COMMIT TRANSACTION;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.5568031309360172);
REINDEX  t0;
ROLLBACK TRANSACTION;
BEGIN  TRANSACTION;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'', '887183024');
COMMIT;
UPDATE OR ABORT t0 SET (c0)=(NULL) WHERE (('-748832438') IS TRUE);
COMMIT TRANSACTION;
INSERT OR IGNORE INTO t0(c0) VALUES ('䐸_￿sL_aP'), (NULL), (NULL);
COMMIT;
ROLLBACK TRANSACTION;
-- SELECT DISTINCT * FROM t0, v0;\n-- cardinality: 2\n-- SELECT DISTINCT * FROM t0, v0 WHERE ((((CAST(v0.c2 AS TEXT)))<=(((v0.c0 IN ()))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((CAST(v0.c2 AS TEXT)))<=(((v0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((CAST(v0.c2 AS TEXT)))<=(((v0.c0 IN ()))))) ISNULL));\n-- cardinality: 0;
